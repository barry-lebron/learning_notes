指令学习
第一章 创建git仓库
PS：git 中的指令有很多适合Linux相通的，例如 mkdir ,cd ,pwd 等
1.git init把进入的目录变成一个可以用git 进行管理的仓库
2.git add file_name 将文件添加到git仓库（注意：一定要在目录下执行命令，不然是无效的。）
3.3.git commit -m “备注信息message”  提交文件至仓库，其实 git commit即为提交文件至git仓库中，它可以一次提交很多个文件，-m后面说的内容是对这次提交操作的说明，方便阅读操作，信息有意义对工作有很大帮助。注意引号是英文的，打中文的话，会出现>然后可以继续打很多行内容，但是无法提交，需要在补上一个英文引号。
Ps: -m的m即为message（很多指令都是其英文单词对应的首字母）
第二章 远程仓库
1.git remote add origin git@github.com/你的账户/你建立的仓库名.git		
Ps:origin是你给这个远程仓库（gitHub中的）定义的一个别称（git中）,它后面跟的是远程仓库的连接，注意在仓库名后署名后缀 .git
2.git push -u origin master 将本地库文件推送到远程库origin（github中的库在git中的代称）的master branch（主分支）中
Ps:第一次推送需要这样，之后可以直接输入指令：git push origin master
3.git remote -v 查询远程库中的仓库信息
4.git remote rm 仓库代号 删除git与远程库的联系 例如 git remote rm origin 删除git 与GitHub中的一个库的联系，这个库在git中的代号为origin
Ps:一般删除前先用一下3指令，看一看详细信息，方便操作，将远程库也删除需要登录github后在github上操作。
第三章 git文件操作 
1.git log 显示从最近到最远的提交日志，可以加上 参数 --pretty=oneline将一次提交记录显示在同一行上
2.git reset --hard commit id 将文件版本倒回到指定的版本 commit id 即为 git log输出的每一行的第一串数字。
3.git reflog查看命令历史，回到未来版本，前提不要关当前窗口。
（二）工作区与暂存区
版本库（Repository）
工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。

Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。

1.git status 指令
git status命令用于显示工作目录和暂存区的状态。使用此命令能看到那些修改被暂存到了, 哪些没有, 哪些文件没有被Git tracked到。git status不显示已经commit到项目历史中去的信息。看项目历史的信息要使用git log
2.暂存区，git add，git commit的关系
将文件执行git add file_name指令后，文件被转移至工作暂存区，这时执行git commit指令，会将暂存区里的文件提交至仓库（repository）中，如果修改文件以后并没有git add 使之进入暂存区，那么执行 git commit的话，修改的文件不会被提交。